{"version":3,"sources":["webpack:///webpack/bootstrap f64f1cff4eb1b5e2380c","webpack:///./js/block.js","webpack:///./js/index.js","webpack:///./js/common.js","webpack:///./js/list.js"],"names":["getBlockTag","getBlockStyle","getStylesAtOffset","sameStyleAsPrevious","addInlineStyleMarkup","addStylePropertyMarkup","trimLeadingZeros","trimTrailingZeros","getBlockInnerMarkup","getBlockMarkup","blockTypesMapping","unstyled","blockquote","type","data","styles","key","value","getHashtagRanges","blockText","hashtagConfig","sections","counter","startIndex","text","trigger","separator","length","substr","indexOf","endIndex","hashtag","push","offset","getSections","block","lastOffset","sectionRanges","entityRanges","map","range","concat","sort","s1","s2","forEach","r","start","end","entityKey","isAtomicEntityBlock","getStyleArrayForBlock","inlineStyleRanges","inlineStyles","BOLD","Array","ITALIC","UNDERLINE","STRIKETHROUGH","CODE","SUPERSCRIPT","SUBSCRIPT","COLOR","BGCOLOR","FONTSIZE","FONTFAMILY","i","style","substring","index","sameStyled","content","getSectionText","chars","ch","join","styleSection","customColors","styleString","fontColor","bgColor","getEntityMarkup","entityMap","customEntityTransform","entity","html","url","target","src","alignment","height","width","getInlineStyleSections","styleSections","section","sectionText","replacedText","replace","getStyleTagSectionMarkup","getInlineStyleSectionMarkup","stylePropertySections","styleSectionText","stylePropertySection","getSectionMarkup","entityInlineMarkup","inlineStyleSections","undefined","blockMarkup","directional","blockHtml","blockTag","blockStyle","draftToHtml","editorContent","blocks","listBlocks","listHtml","isEmptyString","obj","callback","hasOwnProperty","call","str","trim","isList","getListMarkup","blockType","nestedListBlock","previousBlock","nestedBlock","depth"],"mappings":"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","file":"draftjs-to-html.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f64f1cff4eb1b5e2380c","import { forEach, isEmptyString } from './common';\n\n/**\n* Mapping block-type to corresponding html tag.\n*/\nconst blockTypesMapping: Object = {\n  unstyled: 'p',\n  'header-one': 'h1',\n  'header-two': 'h2',\n  'header-three': 'h3',\n  'header-four': 'h4',\n  'header-five': 'h5',\n  'header-six': 'h6',\n  'unordered-list-item': 'ul',\n  'ordered-list-item': 'ol',\n  blockquote: 'blockquote',\n};\n\n/**\n* Function will return HTML tag for a block.\n*/\nexport function getBlockTag(type: string): string {\n  return type && blockTypesMapping[type];\n}\n\n/**\n* Function will return style string for a block.\n*/\nexport function getBlockStyle(data: Object): string {\n  let styles = '';\n  forEach(data, (key, value) => {\n    if (value) {\n      styles += `${key}:${value};`;\n    }\n  });\n  return styles;\n}\n\n/**\n* The function returns an array of hashtag-sections in blocks.\n* These will be areas in block which have hashtags applicable to them.\n*/\nfunction getHashtagRanges(blockText: string, hashtagConfig: Object): Array<Object> {\n  const sections = [];\n  if (hashtagConfig) {\n    let counter = 0;\n    let startIndex = 0;\n    let text = blockText;\n    const trigger = hashtagConfig.trigger || '#';\n    const separator = hashtagConfig.separator || ' ';\n    for (;text.length > 0 && startIndex >= 0;) {\n      if (text[0] === trigger) {\n        startIndex = 0;\n        counter = 0;\n        text = text.substr(trigger.length);\n      } else {\n        startIndex = text.indexOf(separator + trigger);\n        if (startIndex >= 0) {\n          text = text.substr(startIndex + (separator + trigger).length);\n          counter += startIndex + separator.length;\n        }\n      }\n      if (startIndex >= 0) {\n        const endIndex =\n          text.indexOf(separator) >= 0\n          ? text.indexOf(separator)\n          : text.length;\n        const hashtag = text.substr(0, endIndex);\n        if (hashtag && hashtag.length > 0) {\n          sections.push({\n            offset: counter,\n            length: hashtag.length + trigger.length,\n            type: 'HASHTAG',\n          });\n        }\n        counter += trigger.length;\n      }\n    }\n  }\n  return sections;\n}\n\n/**\n* The function returns an array of entity-sections in blocks.\n* These will be areas in block which have same entity or no entity applicable to them.\n*/\nfunction getSections(\n  block: Object,\n  hashtagConfig: Object\n): Array<Object> {\n  const sections = [];\n  let lastOffset = 0;\n  let sectionRanges = block.entityRanges.map((range) => {\n    const { offset, length, key } = range;\n    return {\n      offset,\n      length,\n      key,\n      type: 'ENTITY',\n    };\n  });\n  sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n  sectionRanges = sectionRanges.sort((s1, s2) => s1.offset - s2.offset);\n  sectionRanges.forEach((r) => {\n    if (r.offset > lastOffset) {\n      sections.push({\n        start: lastOffset,\n        end: r.offset,\n      });\n    }\n    sections.push({\n      start: r.offset,\n      end: r.offset + r.length,\n      entityKey: r.key,\n      type: r.type,\n    });\n    lastOffset = r.offset + r.length;\n  });\n  if (lastOffset < block.text.length) {\n    sections.push({\n      start: lastOffset,\n      end: block.text.length,\n    });\n  }\n  return sections;\n}\n\n/**\n* Function to check if the block is an atomic entity block.\n*/\nfunction isAtomicEntityBlock(block: Object): boolean {\n  if ((block.entityRanges.length > 0 && isEmptyString(block.text)) ||\n    block.type === 'atomic') {\n    return true;\n  }\n  return false;\n}\n\n/**\n* The function will return array of inline styles applicable to the block.\n*/\nfunction getStyleArrayForBlock(block: Object): Object {\n  const { text, inlineStyleRanges } = block;\n  const inlineStyles = {\n    BOLD: new Array(text.length),\n    ITALIC: new Array(text.length),\n    UNDERLINE: new Array(text.length),\n    STRIKETHROUGH: new Array(text.length),\n    CODE: new Array(text.length),\n    SUPERSCRIPT: new Array(text.length),\n    SUBSCRIPT: new Array(text.length),\n    COLOR: new Array(text.length),\n    BGCOLOR: new Array(text.length),\n    FONTSIZE: new Array(text.length),\n    FONTFAMILY: new Array(text.length),\n    length: text.length,\n  };\n  if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n    inlineStyleRanges.forEach((range) => {\n      const offset = range.offset;\n      const length = offset + range.length;\n      for (let i = offset; i < length; i += 1) {\n        if (range.style.indexOf('color-') === 0) {\n          inlineStyles.COLOR[i] = range.style.substring(6);\n        } else if (range.style.indexOf('bgcolor-') === 0) {\n          inlineStyles.BGCOLOR[i] = range.style.substring(8);\n        } else if (range.style.indexOf('fontsize-') === 0) {\n          inlineStyles.FONTSIZE[i] = range.style.substring(9);\n        } else if (range.style.indexOf('fontfamily-') === 0) {\n          inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n        } else if (inlineStyles[range.style]) {\n          inlineStyles[range.style][i] = true;\n        }\n      }\n    });\n  }\n\n  return inlineStyles;\n}\n\n/**\n* The function will return inline style applicable at some offset within a block.\n*/\nexport function getStylesAtOffset(inlineStyles: Object, offset: number): Object {\n  const styles = {};\n  if (inlineStyles.COLOR[offset]) {\n    styles.COLOR = inlineStyles.COLOR[offset];\n  }\n  if (inlineStyles.BGCOLOR[offset]) {\n    styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n  }\n  if (inlineStyles.FONTSIZE[offset]) {\n    styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n  }\n  if (inlineStyles.FONTFAMILY[offset]) {\n    styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n  }\n  if (inlineStyles.UNDERLINE[offset]) {\n    styles.UNDERLINE = 'underline';\n  }\n  if (inlineStyles.ITALIC[offset]) {\n    styles.ITALIC = true;\n  }\n  if (inlineStyles.BOLD[offset]) {\n    styles.BOLD = true;\n  }\n  if (inlineStyles.STRIKETHROUGH[offset]) {\n    styles.STRIKETHROUGH = true;\n  }\n  if (inlineStyles.CODE[offset]) {\n    styles.CODE = true;\n  }\n  if (inlineStyles.SUBSCRIPT[offset]) {\n    styles.SUBSCRIPT = true;\n  }\n  if (inlineStyles.SUPERSCRIPT[offset]) {\n    styles.SUPERSCRIPT = true;\n  }\n  return styles;\n}\n\n/**\n* Function returns true for a set of styles if the value of these styles at an offset\n* are same as that on the previous offset.\n*/\nexport function sameStyleAsPrevious(\n  inlineStyles: Object,\n  styles: Array<string>,\n  index: number,\n): boolean {\n  let sameStyled = true;\n  if (index > 0 && index < inlineStyles.length) {\n    styles.forEach((style) => {\n      sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n    });\n  } else {\n    sameStyled = false;\n  }\n  return sameStyled;\n}\n\n/**\n* Function returns html for text depending on inline style tags applicable to it.\n*/\nexport function addInlineStyleMarkup(style: string, content: string): string {\n  if (style === 'BOLD') {\n    return `<strong>${content}</strong>`;\n  } else if (style === 'ITALIC') {\n    return `<em>${content}</em>`;\n  } else if (style === 'UNDERLINE') {\n      return `<ins>${content}</ins>`;\n  } else if (style === 'STRIKETHROUGH') {\n    return `<del>${content}</del>`;\n  } else if (style === 'CODE') {\n    return `<code>${content}</code>`;\n  } else if (style === 'SUPERSCRIPT') {\n    return `<sup>${content}</sup>`;\n  } else if (style === 'SUBSCRIPT') {\n    return `<sub>${content}</sub>`;\n  }\n  return content;\n}\n\n\n\n/**\n* The function returns text for given section of block after doing required character replacements.\n*/\nfunction getSectionText(text: Array<string>): string {\n\n  if (text && text.length > 0) {\n    const chars = text.map((ch) => {\n      switch (ch) {\n        case '\\n':\n          return '<br>\\n';\n        case '&':\n          return '&amp;';\n        case '<':\n          return '&lt;';\n        case '>':\n          return '&gt;';\n        default:\n          return ch;\n      }\n    });\n    return chars.join('');\n  }\n  return '';\n}\n\n/**\n* Function returns html for text depending on inline style tags applicable to it.\n*/\nexport function addStylePropertyMarkup(styleSection: Object, customColors: Object): string {\n  const { styles, text } = styleSection;\n  const content = getSectionText(text);\n\n  if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY || styles.UNDERLINE)) {\n    let styleString = 'style=\"';\n    if (styles.COLOR) {\n      let fontColor = customColors[styles.COLOR]\n      styleString += `color: ${fontColor};`;\n    }\n    if (styles.BGCOLOR) {\n      let bgColor = customColors[styles.BGCOLOR]\n      styleString += `background-color: ${bgColor};`;\n    }\n    if (styles.FONTSIZE) {\n      styleString += `font-size: ${styles.FONTSIZE}px;`;\n    }\n    if (styles.FONTFAMILY) {\n      styleString += `font-family: ${styles.FONTFAMILY};`;\n    }\n    if (styles.UNDERLINE){\n      //let underLine = 'underline'\n      styleString += `text-decoration: ${styles.UNDERLINE};`;\n    }\n    styleString += '\"';\n    return `<span ${styleString}>${content}</span>`;\n  }\n  return content;\n}\n\n/**\n* Function will return markup for Entity.\n*/\nfunction getEntityMarkup(\n  entityMap: Object,\n  entityKey: number,\n  text: string,\n  customEntityTransform: Function\n): string {\n  const entity = entityMap[entityKey];\n  if (typeof customEntityTransform === 'function') {\n    const html = customEntityTransform(entity, text);\n    if (html) {\n      return html;\n    }\n  }\n  if (entity.type === 'MENTION') {\n    return `<a href=\"${entity.data.url}\" class=\"wysiwyg-mention\" data-mention data-value=\"${entity.data.value}\">${text}</a>`;\n  }\n  if (entity.type === 'LINK') {\n    const target = entity.data.target || '_blank';\n    return `<a href=\"${entity.data.url}\" target=\"${target}\" >${text}</a>`;\n  }\n  if (entity.type === 'IMAGE') {\n    return `<a href=\"${entity.data.src}\" target=\"_blank\"><img src=\"${entity.data.src}\" style=\"float:${entity.data.alignment || 'none'};height: ${entity.data.height};width: ${entity.data.width}\"/></a>`;\n  }\n  if (entity.type === 'EMBEDDED_LINK') {\n    return `<iframe width=\"${entity.data.width}\" height=\"${entity.data.height}\" src=\"${entity.data.src}\" frameBorder=\"0\" allowFullScreen />`;\n  }\n  return text;\n}\n\n/**\n* For a given section in a block the function will return a further list of sections,\n* with similar inline styles applicable to them.\n*/\nfunction getInlineStyleSections(\n  block: Object,\n  styles: Array<string>,\n  start: number,\n  end: number,\n): Array<Object> {\n  const styleSections = [];\n  const { text } = block;\n  if (text.length > 0) {\n    const inlineStyles = getStyleArrayForBlock(block);\n    let section;\n    for (let i = start; i < end; i += 1) {\n      if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n        section.text.push(text[i]);\n        section.end = i + 1;\n      } else {\n        section = {\n          styles: getStylesAtOffset(inlineStyles, i),\n          text: [text[i]],\n          start: i,\n          end: i + 1,\n        };\n        styleSections.push(section);\n      }\n    }\n  }\n  return styleSections;\n}\n\n/**\n* Replace leading blank spaces by &nbsp;\n*/\nexport function trimLeadingZeros(sectionText: string): string {\n  if (sectionText) {\n    let replacedText = sectionText;\n    for (let i = 0; i < replacedText.length; i += 1) {\n      if (sectionText[i] === ' ') {\n        replacedText = replacedText.replace(' ', '&nbsp;');\n      } else {\n        break;\n      }\n    }\n    return replacedText;\n  }\n  return sectionText;\n}\n\n/**\n* Replace trailing blank spaces by &nbsp;\n*/\nexport function trimTrailingZeros(sectionText: string): string {\n  if (sectionText) {\n    let replacedText = sectionText;\n    for (let i = replacedText.length - 1; i >= 0; i -= 1) {\n      if (replacedText[i] === ' ') {\n        replacedText = `${replacedText.substring(0, i)}&nbsp;${replacedText.substring(i + 1)}`;\n      } else {\n        break;\n      }\n    }\n    return replacedText;\n  }\n  return sectionText;\n}\n\n/**\n* The method returns markup for section to which inline styles\n* like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n*/\nfunction getStyleTagSectionMarkup(styles: Object, text: string): string {\n  let content = text;\n  forEach(styles, (style, value) => {\n    content = addInlineStyleMarkup(style, content, value);\n  });\n  return content;\n}\n\n\n/**\n* The method returns markup for section to which inline styles\nlike color, background-color, font-size are applicable.\n*/\nfunction getInlineStyleSectionMarkup(block: Object, styleSection: Object, customColors: Object): string {\n  const stylePropertySections = getInlineStyleSections(\n    block, ['COLOR', 'BGCOLOR', 'FONTSIZE', 'FONTFAMILY', 'UNDERLINE'], styleSection.start, styleSection.end,\n  );\n  let styleSectionText = '';\n  stylePropertySections.forEach((stylePropertySection) => {\n    styleSectionText += addStylePropertyMarkup(stylePropertySection, customColors);\n  });\n  styleSectionText = getStyleTagSectionMarkup(styleSection.styles, styleSectionText);\n  return styleSectionText;\n}\n\n/*\n* The method returns markup for an entity section.\n* An entity section is a continuous section in a block\n* to which same entity or no entity is applicable.\n*/\nfunction getSectionMarkup(\n  block: Object,\n  entityMap: Object,\n  section: Object,\n  customEntityTransform: Function,\n  customColors: Object\n  ): string {\n  const entityInlineMarkup = [];\n  const inlineStyleSections = getInlineStyleSections(\n    block,\n    ['BOLD', 'ITALIC', 'STRIKETHROUGH', 'CODE', 'SUPERSCRIPT', 'SUBSCRIPT'],\n    section.start,\n    section.end,\n  );\n  inlineStyleSections.forEach((styleSection) => {\n    entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection, customColors));\n  });\n  let sectionText = entityInlineMarkup.join('');\n  if (section.type === 'ENTITY') {\n    if (section.entityKey !== undefined && section.entityKey !== null) {\n      sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform);\n    }\n  } else if (section.type === 'HASHTAG') {\n    sectionText = `<a href=\"${sectionText}\" class=\"wysiwyg-hashtag\">${sectionText}</a>`;\n  }\n  return sectionText;\n}\n\n/**\n* Function will return the markup for block preserving the inline styles and\n* special characters like newlines or blank spaces.\n*/\n\nexport function getBlockInnerMarkup(\n  block: Object,\n  entityMap: Object,\n  hashtagConfig: Object,\n  customEntityTransform: Function,\n  customColors: Object\n): string {\n  const blockMarkup = [];\n  const sections = getSections(block, hashtagConfig);\n  sections.forEach((section, index) => {\n    let sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform, customColors);\n    if (index === 0) {\n      sectionText = trimLeadingZeros(sectionText);\n    }\n    if (index === sections.length - 1) {\n      sectionText = trimTrailingZeros(sectionText);\n    }\n    blockMarkup.push(sectionText);\n  });\n\n  return blockMarkup.join('');\n}\n\n/**\n* Function will return html for the block.\n*/\nexport function getBlockMarkup(\n  block: Object,\n  entityMap: Object,\n  hashtagConfig: Object,\n  directional: boolean,\n  customEntityTransform: Function,\n  customColors: Object\n): string {\n\n  const blockHtml = [];\n  if (isAtomicEntityBlock(block)) {\n    blockHtml.push(\n      getEntityMarkup(\n        entityMap,\n        block.entityRanges[0].key,\n        undefined,\n        customEntityTransform,\n      ));\n  } else {\n\n    const blockTag = getBlockTag(block.type);\n\n    if (blockTag && block.text) {\n      blockHtml.push(`<${blockTag}`);\n      const blockStyle = getBlockStyle(block.data);\n      if (blockStyle) {\n        blockHtml.push(` style=\"${blockStyle}\"`);\n      }\n      if (directional) {\n        blockHtml.push(' dir = \"auto\"');\n      }\n      blockHtml.push('>');\n      blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform, customColors));\n      blockHtml.push(`</${blockTag}>`);\n    } else {\n      blockHtml.push('<br/>')\n    }\n  }\n  blockHtml.push('\\n');\n  return blockHtml.join('');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/block.js","/* @flow */\nimport { getBlockMarkup } from './block';\nimport { isList, getListMarkup } from './list';\n\n/**\n* The function will generate html markup for given draftjs editorContent.\n*/\n\nexport default function draftToHtml(\n  editorContent: ContentState,\n  hashtagConfig: Object,\n  directional: boolean,\n  customEntityTransform: Function,\n  customColors: Objects\n): string {\n  const html = [];\n  if (editorContent) {\n    const { blocks, entityMap } = editorContent;\n    if (blocks && blocks.length > 0) {\n      let listBlocks = [];\n      blocks.forEach((block) => {\n        if (isList(block.type)) {\n          listBlocks.push(block);\n        } else {\n          if (listBlocks.length > 0) {\n            const listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform, customColors);\n            html.push(listHtml);\n            listBlocks = [];\n          }\n          const blockHtml = getBlockMarkup(\n            block,\n            entityMap,\n            hashtagConfig,\n            directional,\n            customEntityTransform,\n            customColors\n          );\n          html.push(blockHtml);\n        }\n      });\n      if (listBlocks.length > 0) {\n        const listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform, customColors);\n        html.push(listHtml);\n        listBlocks = [];\n      }\n    }\n  }\n  return html.join('');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/index.js","/* @flow */\n\n/**\n* Utility function to execute callback for eack key->value pair.\n*/\nexport function forEach(obj: Object, callback: Function) {\n  if (obj) {\n    for (const key in obj) { // eslint-disable-line no-restricted-syntax\n      if ({}.hasOwnProperty.call(obj, key)) {\n        callback(key, obj[key]);\n      }\n    }\n  }\n}\n\n/**\n* The function returns true if the string passed to it has no content.\n*/\nexport function isEmptyString(str: string): boolean {\n  if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n    return true;\n  }\n  return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/common.js","import {\n  getBlockTag,\n  getBlockStyle,\n  getBlockInnerMarkup,\n} from './block';\n\n/**\n* Function to check if a block is of type list.\n*/\nexport function isList(blockType: string): any {\n  return (\n    blockType === 'unordered-list-item' ||\n    blockType === 'ordered-list-item'\n  );\n}\n\n/**\n* Function will return html markup for a list block.\n*/\nexport function getListMarkup(\n  listBlocks: Array<Object>,\n  entityMap: Object,\n  hashtagConfig: Object,\n  directional: boolean,\n  customEntityTransform: Function,\n  customColors: Object\n): string {\n\n  const listHtml = [];\n  let nestedListBlock = [];\n  let previousBlock;\n  listBlocks.forEach((block) => {\n    let nestedBlock = false;\n    if (!previousBlock) {\n      listHtml.push(`<${getBlockTag(block.type)}>\\n`);\n    } else if (previousBlock.type !== block.type) {\n      listHtml.push(`</${getBlockTag(previousBlock.type)}>\\n`);\n      listHtml.push(`<${getBlockTag(block.type)}>\\n`);\n    } else if (previousBlock.depth === block.depth) {\n      if (nestedListBlock && nestedListBlock.length > 0) {\n        listHtml.push(getListMarkup(\n          nestedListBlock,\n          entityMap,\n          hashtagConfig,\n          directional,\n          customEntityTransform,\n          customColors\n        ));\n        nestedListBlock = [];\n      }\n    } else {\n      nestedBlock = true;\n      nestedListBlock.push(block);\n    }\n    if (!nestedBlock) {\n      listHtml.push('<li');\n      const blockStyle = getBlockStyle(block.data);\n      if (blockStyle) {\n        listHtml.push(` style=\"${blockStyle}\"`);\n      }\n      if (directional) {\n        blockHtml.push(' dir = \"auto\"');\n      }\n      listHtml.push('>');\n      listHtml.push(getBlockInnerMarkup(\n        block,\n        entityMap,\n        hashtagConfig,\n        customEntityTransform,\n        customColors\n      ));\n      listHtml.push('</li>\\n');\n      previousBlock = block;\n    }\n  });\n  if (nestedListBlock && nestedListBlock.length > 0) {\n    listHtml.push(getListMarkup(\n      nestedListBlock,\n      entityMap,\n      hashtagConfig,\n      directional,\n      customEntityTransform,\n      customColors\n    ));\n  }\n  listHtml.push(`</${getBlockTag(previousBlock.type)}>\\n`);\n  return listHtml.join('');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./js/list.js"],"sourceRoot":""}